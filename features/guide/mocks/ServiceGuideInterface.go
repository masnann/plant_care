// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	domain "github.com/masnann/plant_care/features/guide/domain"

	mock "github.com/stretchr/testify/mock"
)

// ServiceGuideInterface is an autogenerated mock type for the ServiceGuideInterface type
type ServiceGuideInterface struct {
	mock.Mock
}

// CountGuides provides a mock function with given fields:
func (_m *ServiceGuideInterface) CountGuides() (int64, error) {
	ret := _m.Called()

	var r0 int64
	var r1 error
	if rf, ok := ret.Get(0).(func() (int64, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByIdGuides provides a mock function with given fields: id
func (_m *ServiceGuideInterface) GetByIdGuides(id uint64) (*domain.GuideModel, error) {
	ret := _m.Called(id)

	var r0 *domain.GuideModel
	var r1 error
	if rf, ok := ret.Get(0).(func(uint64) (*domain.GuideModel, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(uint64) *domain.GuideModel); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.GuideModel)
		}
	}

	if rf, ok := ret.Get(1).(func(uint64) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetGuidesWithPagination provides a mock function with given fields: page, pageSize
func (_m *ServiceGuideInterface) GetGuidesWithPagination(page int, pageSize int) ([]domain.GuideModel, error) {
	ret := _m.Called(page, pageSize)

	var r0 []domain.GuideModel
	var r1 error
	if rf, ok := ret.Get(0).(func(int, int) ([]domain.GuideModel, error)); ok {
		return rf(page, pageSize)
	}
	if rf, ok := ret.Get(0).(func(int, int) []domain.GuideModel); ok {
		r0 = rf(page, pageSize)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.GuideModel)
		}
	}

	if rf, ok := ret.Get(1).(func(int, int) error); ok {
		r1 = rf(page, pageSize)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SearchGuideByName provides a mock function with given fields: name
func (_m *ServiceGuideInterface) SearchGuideByName(name string) ([]*domain.GuideModel, error) {
	ret := _m.Called(name)

	var r0 []*domain.GuideModel
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]*domain.GuideModel, error)); ok {
		return rf(name)
	}
	if rf, ok := ret.Get(0).(func(string) []*domain.GuideModel); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*domain.GuideModel)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewServiceGuideInterface creates a new instance of ServiceGuideInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewServiceGuideInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ServiceGuideInterface {
	mock := &ServiceGuideInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
